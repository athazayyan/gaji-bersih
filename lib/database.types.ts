/**
 * Database Types
 *
 * This file contains TypeScript types auto-generated from your Supabase database schema.
 *
 * DO NOT EDIT THIS FILE MANUALLY!
 *
 * To regenerate types after schema changes:
 * 1. Run migrations: npm run db:migrate
 * 2. Generate types: npm run types:generate
 *
 * Or simply: supabase gen types typescript --linked > lib/database.types.ts
 */

// Placeholder type until you run type generation
export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string
          email: string
          full_name: string | null
          avatar_path: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id: string
          email: string
          full_name?: string | null
          avatar_path?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          email?: string
          full_name?: string | null
          avatar_path?: string | null
          created_at?: string
          updated_at?: string
        }
      }
      sessions: {
        Row: {
          chat_id: string
          user_id: string
          session_vs_id: string | null
          expires_at: string
          created_at: string
          updated_at: string
        }
        Insert: {
          chat_id?: string
          user_id: string
          session_vs_id?: string | null
          expires_at: string
          created_at?: string
          updated_at?: string
        }
        Update: {
          chat_id?: string
          user_id?: string
          session_vs_id?: string | null
          expires_at?: string
          created_at?: string
          updated_at?: string
        }
      }
      documents: {
        Row: {
          id: string
          user_id: string
          chat_id: string | null
          doc_type: string
          file_name: string
          file_size: number
          mime_type: string
          storage_path: string
          file_id: string | null
          vs_file_id: string | null
          vector_store: string | null
          expires_at: string | null
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          chat_id?: string | null
          doc_type?: string
          file_name: string
          file_size: number
          mime_type: string
          storage_path: string
          file_id?: string | null
          vs_file_id?: string | null
          vector_store?: string | null
          expires_at?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          chat_id?: string | null
          doc_type?: string
          file_name?: string
          file_size?: number
          mime_type?: string
          storage_path?: string
          file_id?: string | null
          vs_file_id?: string | null
          vector_store?: string | null
          expires_at?: string | null
          created_at?: string
        }
      }
      runs: {
        Row: {
          id: string
          chat_id: string
          user_id: string
          request_id: string | null
          question: string
          answer: string | null
          token_usage: number | null
          prompt_tokens: number | null
          completion_tokens: number | null
          latency_ms: number | null
          citations_json: Json | null
          tool_calls: Json | null
          error: string | null
          created_at: string
        }
        Insert: {
          id?: string
          chat_id: string
          user_id: string
          request_id?: string | null
          question: string
          answer?: string | null
          token_usage?: number | null
          prompt_tokens?: number | null
          completion_tokens?: number | null
          latency_ms?: number | null
          citations_json?: Json | null
          tool_calls?: Json | null
          error?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          chat_id?: string
          user_id?: string
          request_id?: string | null
          question?: string
          answer?: string | null
          token_usage?: number | null
          prompt_tokens?: number | null
          completion_tokens?: number | null
          latency_ms?: number | null
          citations_json?: Json | null
          tool_calls?: Json | null
          error?: string | null
          created_at?: string
        }
      }
    }
    Views: {
      user_usage_stats: {
        Row: {
          user_id: string | null
          total_queries: number | null
          total_tokens: number | null
          avg_latency_ms: number | null
          error_count: number | null
          query_date: string | null
        }
      }
    }
    Functions: {
      cleanup_expired_documents: {
        Args: Record<string, never>
        Returns: {
          deleted_documents: number
          deleted_sessions: number
        }[]
      }
      cleanup_expired_documents_with_logging: {
        Args: Record<string, never>
        Returns: void
      }
      generate_storage_path: {
        Args: {
          user_uuid: string
          file_name: string
          bucket_name?: string
        }
        Returns: string
      }
    }
    Enums: {
      doc_type: 'contract' | 'policy' | 'nda' | 'regulation' | 'payslip' | 'other'
      vector_store_type: 'global' | 'big' | 'session'
    }
  }
}
